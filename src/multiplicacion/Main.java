/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package multiplicacion;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;

/**
 *
 * @author logongas
 */
public class Main extends javax.swing.JFrame {

    List<Prueba> pruebas = new ArrayList<>();
    Random random = new Random();
    int numRepeticiones = 2;
    Prueba pruebaActual;
    String tablas;
    int timeout;
    int numFallosPermitidos;
    int numFallos;
    Timer timer = null;
    Operacion operacion;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldTablas = new javax.swing.JTextField();
        jLabelPrueba = new javax.swing.JLabel();
        jTextFieldResultado = new javax.swing.JTextField();
        jButtonEmpezar = new javax.swing.JButton();
        jLabelFaltan = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNumRepeticiones = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldTimeout = new javax.swing.JTextField();
        jLabelNumFallosPermitidos = new javax.swing.JLabel();
        jTextFieldNumFallosPermitidos = new javax.swing.JTextField();
        jLabelNumFallos = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxOperacion = new javax.swing.JComboBox<>();
        jCheckBoxNegativos = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tablas Matemáticas.");
        setLocation(new java.awt.Point(0, 0));
        setLocationByPlatform(true);

        jLabel1.setText("Tablas:");

        jTextFieldTablas.setText("2,3,4,5,6,7,8,9");

        jLabelPrueba.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabelPrueba.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelPrueba.setText("a x b =");

        jTextFieldResultado.setFont(new java.awt.Font("Dialog", 0, 48)); // NOI18N
        jTextFieldResultado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldResultadoKeyPressed(evt);
            }
        });

        jButtonEmpezar.setText("Empezar");
        jButtonEmpezar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmpezarActionPerformed(evt);
            }
        });

        jLabelFaltan.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabelFaltan.setText("000");

        jLabel2.setText("Repeticiones");

        jTextFieldNumRepeticiones.setText("1");

        jLabel3.setText("Timeout(s):");

        jTextFieldTimeout.setText("10");
        jTextFieldTimeout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTimeoutActionPerformed(evt);
            }
        });

        jLabelNumFallosPermitidos.setText("Nº Fallos");

        jTextFieldNumFallosPermitidos.setText("3");
        jTextFieldNumFallosPermitidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNumFallosPermitidosActionPerformed(evt);
            }
        });

        jLabelNumFallos.setText("0");

        jLabel4.setText("Operación:");

        jComboBoxOperacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sumar", "Restar", "Multiplicar", "Dividir", "RestarNegativos" }));
        jComboBoxOperacion.setSelectedIndex(2);

        jCheckBoxNegativos.setText("Incluir negativos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelPrueba, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelFaltan))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(108, 227, Short.MAX_VALUE)
                        .addComponent(jLabelNumFallos)
                        .addGap(213, 213, 213))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(jLabel3))
                            .addComponent(jLabelNumFallosPermitidos)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextFieldNumRepeticiones, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jTextFieldTablas)
                                        .addGap(33, 33, 33)))
                                .addComponent(jButtonEmpezar))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldNumFallosPermitidos, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldTimeout, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCheckBoxNegativos))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEmpezar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNumRepeticiones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldTimeout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNumFallosPermitidos)
                    .addComponent(jTextFieldNumFallosPermitidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxNegativos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPrueba)
                    .addComponent(jTextFieldResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelFaltan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelNumFallos))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEmpezarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmpezarActionPerformed
        numRepeticiones = Integer.parseInt(jTextFieldNumRepeticiones.getText());
        tablas = jTextFieldTablas.getText();
        timeout = Math.abs(nInt(jTextFieldTimeout.getText()));
        operacion=Operacion.valueOf(jComboBoxOperacion.getSelectedItem().toString());

        if (timer != null) {
            timer.cancel();
            timer.purge();
        }
        timer = null;

        if (jTextFieldNumFallosPermitidos.getText().trim().equals("")) {
            numFallosPermitidos = Integer.MAX_VALUE;
        } else {
            numFallosPermitidos = Integer.parseInt(jTextFieldNumFallosPermitidos.getText());
        }
        resetNumFallos();

        List<String> stringtablas = Arrays.asList(tablas.split(","));
        pruebas = new ArrayList<>();
        for (int i = 0; i < stringtablas.size(); i++) {
            int tabla = Integer.parseInt(stringtablas.get(i));


            for (int j = 2; j <= 9; j++) {
                pruebas.add(operacion.getPrueba(tabla, j));
            }

            if (jCheckBoxNegativos.isSelected()==true) {
                for (int j = 2; j <= 9; j++) {
                    pruebas.add(operacion.getPrueba(tabla, -j));
                }
                for (int j = 2; j <= 9; j++) {
                    pruebas.add(operacion.getPrueba(-tabla, j));
                }
                for (int j = 2; j <= 9; j++) {
                    pruebas.add(operacion.getPrueba(-tabla, -j));
                }                
            }
            
        }

        pruebaActual = elegirPrueba();

        if (pruebaActual != null) {
            pintarPrueba(pruebaActual);
        } else {
            finPruebas();
        }

    }//GEN-LAST:event_jButtonEmpezarActionPerformed

    private int nInt(String sInt) {
        if (sInt==null) {
            return 0;
        }else if (sInt.trim().equals("")) {
            return 0;
        } else {
            return Integer.parseInt(jTextFieldTimeout.getText());
        }
            
    }
    
    private void jTextFieldResultadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldResultadoKeyPressed
        if (pruebaActual == null) {
            return;
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            if (isNumber(jTextFieldResultado.getText())==true) {
                resolverPrueba();
            }
        }
    }//GEN-LAST:event_jTextFieldResultadoKeyPressed

    private void jTextFieldTimeoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTimeoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTimeoutActionPerformed

    private void jTextFieldNumFallosPermitidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNumFallosPermitidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNumFallosPermitidosActionPerformed

    private Prueba elegirPrueba() {
        Prueba prueba = null;

        if (faltanPruebas() <= 0) {
            return null;
        }

        while (prueba == null) {
            int i = random.nextInt(pruebas.size());

            if (pruebas.get(i).aciertos < numRepeticiones) {
                prueba = pruebas.get(i);
            }
        }

        return prueba;

    }

    private void pintarPrueba(Prueba prueba) {

        jLabelPrueba.setText(operacion.getTextPrueba(prueba.a , prueba.b) + "=");
        jTextFieldResultado.setText("");
        jTextFieldResultado.requestFocus();
        jLabelFaltan.setText("" + faltanPruebas());

        if (timeout > 0) {
            TimerTask timerTask = new TimerTask() {
                public void run() {
                    resolverPrueba();
                }
            };
            timer = new Timer();
            timer.schedule(timerTask, timeout * 1000);
        }

    }

    private void finPruebas() {
        String msg = "Felicidaes, has terminado.\nTablas:" + tablas + "\nNúmero aciertos:" + numRepeticiones + "\ntimeout:" + timeout;
        if (numFallosPermitidos < Integer.MAX_VALUE) {
            msg = msg + "\nNº fallos Permitidos:" + numFallosPermitidos;
        }
        msg = msg + "\nNº fallos Realizados:" + numFallos;

        JOptionPane.showMessageDialog(this,msg);
    }

    private int faltanPruebas() {
        int total = pruebas.size() * numRepeticiones;
        int resultos = 0;
        for (int i = 0; i < pruebas.size(); i++) {
            resultos = resultos + (pruebas.get(i).aciertos);
        }

        return total - resultos;
    }

    private void resolverPrueba() {
        if (timer != null) {
            timer.cancel();
            timer.purge();
            timer = null;
        }

        int resultadoAlumno;

        try {
            resultadoAlumno = Integer.parseInt(jTextFieldResultado.getText());
        } catch (NumberFormatException ex) {
            resultadoAlumno = 0;
        }
        int resultadoReal = operacion.calcular(pruebaActual.a , pruebaActual.b);
        if (resultadoAlumno != resultadoReal) {
            java.awt.Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, jLabelPrueba.getText() + resultadoReal + "\n\nPero tu habías puesto:" + jTextFieldResultado.getText());
            pruebaActual.aciertos = 0;

            incNumFallos();
            if (numFallos > numFallosPermitidos) {
                resetNumFallos();
                for (Prueba prueba : pruebas) {
                    prueba.aciertos = 0;
                }
            }

        } else {
            pruebaActual.aciertos++;
        }

        pruebaActual = elegirPrueba();

        if (pruebaActual != null) {
            pintarPrueba(pruebaActual);
        } else {
            finPruebas();
        }
    }

    private void resetNumFallos() {
        numFallos = 0;
        jLabelNumFallos.setText(numFallos + "");
    }

    private void incNumFallos() {
        numFallos++;
        jLabelNumFallos.setText(numFallos + "");
    }
    
    
    private boolean isNumber(String text) {
        try {
            Integer.parseInt(text);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEmpezar;
    private javax.swing.JCheckBox jCheckBoxNegativos;
    private javax.swing.JComboBox<String> jComboBoxOperacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelFaltan;
    private javax.swing.JLabel jLabelNumFallos;
    private javax.swing.JLabel jLabelNumFallosPermitidos;
    private javax.swing.JLabel jLabelPrueba;
    private javax.swing.JTextField jTextFieldNumFallosPermitidos;
    private javax.swing.JTextField jTextFieldNumRepeticiones;
    private javax.swing.JTextField jTextFieldResultado;
    private javax.swing.JTextField jTextFieldTablas;
    private javax.swing.JTextField jTextFieldTimeout;
    // End of variables declaration//GEN-END:variables

}
